version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
jobs:
    create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1

    # Exercise: Config and Deployment
    configure_infrastructure: 
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - add_ssh_keys:
                # You can get this ID in the section where you registered the SSH Key
            fingerprints: ["1a:93:03:90:c1:86:79:f0:7f:c7:0a:d2:52:56:07:8b"] 
        # - run:
        #     name: Install Dependecies
        #     command: | 
        #       apk add --update ansible

        - run:
            name: Install dependencies
            command: |
              apk add --update ansible
              apk add --update openssh-server
              apk --no-cache add --virtual builds-deps build-base python3
              pip install --upgrade pip && pip install --upgrade awscli

        - run:
            name: Run Playbook and Configure server
            command: |
              ansible-playbook -i inventory main-remote.yml

    smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run: apk add --update curl
        - run:
            name: smoke test
            command: |
              URL="https://blog.udacity.com/"
              # Test if website exists
              if curl -s --head ${URL} 
              then
                return 0
              else
                return 1
              fi
# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      # - create_infrastructure
      - configure_infrastructure
      - smoke_test